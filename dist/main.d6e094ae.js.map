{"version":3,"sources":["../js/main.js"],"names":["allRows","document","querySelector","numRows","numColumns","time","recordTime","innerHTML","firstSquare","squaresCleared","numMarked","markersPlaced","NaN","allMarkers","values","finalValues","gridSelector","addEventListener","createBoard","presetRows","customRows","presetColumns","customColumns","customButton","reset","resetBoard","currentTime","indicatorArrow","clickActions","clickAction","clearQueue","firstChild","removeChild","style","display","removeAttribute","setAttribute","value","localStorage","getItem","evt","preventDefault","i","parseInt","Math","floor","newRow","createElement","j","appendChild","newSquare","clickHandler","startTimer","setInterval","stopTimer","clearInterval","clear","clickVal","target","id","substr","push","placeMines","checkNeighbors","removeEventListener","console","log","firstSquareId","getAttribute","length","currentIndex","temporaryValue","randomIndex","random","slice","concat","clickId","clicked","explode","counter","countText","shift","nextSquare","classList","contains","placeMarker","squareMarked","setItem","bomb","thisSquare","setTimeout"],"mappings":";AACA,IAAIA,EAAUC,SAASC,cAAc,SACjCC,EAAU,EACVC,EAAa,EACbC,EAAOJ,SAASC,cAAc,SAC9BI,EAAaL,SAASC,cAAc,gBACxCI,EAAWC,UAAY,UACvB,IAIIC,EAJAC,EAAiB,EACjBC,EAAYT,SAASC,cAAc,WACnCS,EAAgBC,IAChBC,EAAaD,IAEbE,EAAS,GACTC,EAAc,GACdC,EAAef,SAASC,cAAc,iBAC1Cc,EAAaC,iBAAiB,SAASC,GACvC,IAAIC,EAAalB,SAASC,cAAc,gBACxCiB,EAAWZ,UAAYJ,EACvB,IAAIiB,EAAanB,SAASC,cAAc,iBACpCmB,EAAgBpB,SAASC,cAAc,mBAC3CmB,EAAcd,UAAYH,EAC1B,IAAIkB,EAAgBrB,SAASC,cAAc,oBACvCqB,EAAetB,SAASC,cAAc,iBACtCsB,EAAQvB,SAASC,cAAc,UACnCsB,EAAMP,iBAAiB,QAASQ,GAChC,IAGIC,EAHAC,EAAiB1B,SAASC,cAAc,mBACxC0B,EAAe3B,SAASC,cAAc,iBAC1C0B,EAAaX,iBAAiB,QAAQY,GAEtC,IAAIC,EAAa,GAIjB,SAASZ,IACAlB,KAAAA,EAAQ+B,YAAY,CAClB/B,KAAAA,EAAQ+B,WAAWA,YACxB/B,EAAQ+B,WAAWC,YAAYhC,EAAQ+B,WAAWA,YAEpD/B,EAAQgC,YAAYhC,EAAQ+B,YAStBf,OAPRf,SAASC,cAAc,eAAe+B,MAAMC,QAAU,OACtDjC,SAASC,cAAc,gBAAgB+B,MAAMC,QAAU,OACvDpB,EAAS,GACTC,EAAc,GACdN,EAAiB,EACjBkB,EAAeQ,gBAAgB,SAC/BR,EAAeS,aAAa,QAAQ,eAC5BpB,EAAaqB,OACd,IAAA,QACwC,OAAvCC,aAAaC,QAAQ,gBACvBjC,EAAWC,UAAY+B,aAAaC,QAAQ,eAE9CpB,EAAWc,MAAMC,QAAU,SAC3Bf,EAAWZ,UAAY,IACvBc,EAAcY,MAAMC,QAAU,SAC9Bb,EAAcd,UAAY,IAC1Ba,EAAWa,MAAMC,QAAU,OAC3BZ,EAAcW,MAAMC,QAAU,OAC9BX,EAAaU,MAAMC,QAAU,OAC7B/B,EAAU,EACVC,EAAa,EACb,MACG,IAAA,SACsC,OAArCkC,aAAaC,QAAQ,YACvBjC,EAAWC,UAAY+B,aAAaC,QAAQ,YACtCjC,EAAWC,UAAY,UAC/BY,EAAWc,MAAMC,QAAU,SAC3Bf,EAAWZ,UAAY,KACvBc,EAAcY,MAAMC,QAAU,SAC9Bb,EAAcd,UAAY,KAC1Ba,EAAWa,MAAMC,QAAU,OAC3BZ,EAAcW,MAAMC,QAAU,OAC9BX,EAAaU,MAAMC,QAAU,OAC7B/B,EAAU,GACVC,EAAa,GACb,MACG,IAAA,QACwC,OAAvCkC,aAAaC,QAAQ,cACvBjC,EAAWC,UAAY+B,aAAaC,QAAQ,cAE5CjC,EAAWC,UAAY,UAEzBY,EAAWc,MAAMC,QAAU,SAC3Bf,EAAWZ,UAAY,KACvBc,EAAcY,MAAMC,QAAU,SAC9Bb,EAAcd,UAAY,KAC1Ba,EAAWa,MAAMC,QAAU,OAC3BZ,EAAcW,MAAMC,QAAU,OAC9BX,EAAaU,MAAMC,QAAU,OAC7B/B,EAAU,GACVC,EAAa,GACb,MACG,IAAA,SAEHE,EAAWC,UAAY,MACvBY,EAAWc,MAAMC,QAAU,OAC3Bd,EAAWa,MAAMC,QAAU,QAC3Bb,EAAcY,MAAMC,QAAU,OAC9BZ,EAAcW,MAAMC,QAAU,QAC9BX,EAAaU,MAAMC,QAAU,SAC7BlB,EAAaC,iBAAiB,SAAUC,GACxCK,EAAaN,iBAAiB,QAAS,SAASuB,GAC9CA,EAAIC,iBACJtC,EAAUiB,EAAWiB,MACrBjC,EAAakB,EAAce,QAO5BK,IAJLrC,EAAKE,UAAYoC,SAAS,EAAE,IAC5B9B,EAAa+B,KAAKC,MAAM1C,EAAUC,EAAa,IAC/CO,EAAgB,EAChBD,EAAUH,UAAeI,GAAAA,OAAAA,EAAmBE,OAAAA,OAAAA,GACvC6B,EAAI,EAAGA,EAAIvC,EAASuC,IAAK,CACxBI,IAAAA,EAAS7C,SAAS8C,cAAc,OAI/BC,IAHLhD,EAAQiD,YAAYH,GACpBA,EAAOV,aAAa,QAAS,OAC7BU,EAAOV,aAAa,KAAYM,OAAAA,OAAAA,EAAI,IAC/BM,EAAI,EAAGA,EAAI5C,EAAY4C,IAAK,CAC3BE,IAAAA,EAAYjD,SAAS8C,cAAc,OACvCD,EAAOG,YAAYC,GACnBA,EAAUd,aAAa,QAAvB,UACAc,EAAUd,aAAa,KAAYM,KAAAA,OAAAA,EAAItC,EAAc4C,EAAI,IACzDE,EAAUjC,iBAAiB,QAASkC,KAO1C,SAASC,IACP/C,EAAKE,UAAY,EACjBmB,EAAc2B,YAAY,WAAahD,EAAKE,UAAYoC,SAAStC,EAAKE,UAAW,IAAM,GAAK,KAE9F,SAAS+C,IACPC,cAAc7B,GAIhB,SAASD,EAAWe,GAClBA,EAAIC,iBACJa,IACApC,IAIF,SAASsC,EAAMhB,GACbA,EAAIC,iBACAgB,IAAAA,EAAWd,SAASH,EAAIkB,OAAOC,GAAGC,OAAO,GAAG,IAChD9B,EAAW+B,KAAKJ,GACZhD,EAAiB,GACnBD,EAAcgC,EAAIkB,OAClBI,IACAC,IACAtD,GAAkB,IAElBA,GAAkB,EAClB+B,EAAIkB,OAAOvB,gBAAgB,SAC3BK,EAAIkB,OAAOM,oBAAoB,QAAQnC,GACvCkC,KAKJ,SAASD,IACPG,QAAQC,IAAI1D,GACR2D,IAAAA,EAAgBxB,SAASnC,EAAY4D,aAAa,MAAMR,OAAO,GAAG,IACjElB,IAAAA,EAAI,EAAGA,EAAI7B,EAAY6B,IAC1B5B,EAAO+C,KAAK,QAGTnB,IADLuB,QAAQC,IAAqBpD,iBAAAA,OAAAA,EAAOuD,OAApC,WACK3B,EAAI,EAAGA,EAAMtC,EAAaD,EAAWU,EAAa,EAAI6B,IACzD5B,EAAO+C,KAAK,OAIP,IADHS,IAA8BC,EAAgBC,EAA9CF,EAAexD,EAAOuD,OACnB,IAAMC,GACXE,EAAc5B,KAAKC,MAAMD,KAAK6B,SAAWH,GAEzCC,EAAiBzD,EADjBwD,GAAgB,GAEhBxD,EAAOwD,GAAgBxD,EAAO0D,GAC9B1D,EAAO0D,GAAeD,EAGxBN,QAAQC,IAAoCC,gCAAAA,OAAAA,IAC5CF,QAAQC,IAAIpD,EAAO4D,MAAM,EAAGP,EAAgB,IAC5CpD,EAAY8C,KAAK/C,EAAO4D,MAAM,EAAGP,EAAgB,IACjDF,QAAQC,IAAInD,EAAY,GAAGsD,QAC3BtD,EAAY8C,KAAK,CAAC,QAClB9C,EAAY8C,KAAK/C,EAAO4D,MAAOP,EAAgB,IAC/CrD,EAASC,EAAY,GAAG4D,OAAO5D,EAAY,GAAGA,EAAY,IAC1DkD,QAAQC,IAAqBpD,iBAAAA,OAAAA,EAAOuD,OAApC,YACAJ,QAAQC,IAAIpD,GACZsC,IAIF,SAASW,IACHa,IAAAA,EAAU9C,EAAW,GACrB2B,EAAWmB,EAAU,EACzBX,QAAQC,IAAIU,GACRC,IAAAA,EAAU5E,SAASC,cAAoB0E,MAAAA,OAAAA,IAEvC9D,GADJ+D,EAAQb,oBAAoB,QAASb,GACZ,SAArBrC,EAAO2C,GACTQ,QAAQC,IAAI,SACZZ,IACAuB,EAAQ1C,gBAAgB,SACxB0C,EAAQzC,aAAa,QAAQ,QAC7B0C,EAAQF,OACH,CACDG,IAAAA,EAAU,EACTH,EAAUxE,GAAgBwE,EAAUxE,GAAe,GACV,SAAvCU,EAAO2C,EAAWrD,EAAa,KAClC2E,GAAW,GAGXH,EAAUxE,GAC4B,SAAnCU,EAAO2C,EAAWrD,KACrB2E,GAAW,GAGVH,EAAUxE,GAAgBwE,EAAUxE,GAAe,GACV,SAAvCU,EAAO2C,EAAWrD,EAAa,KAClC2E,GAAW,GAGXH,EAAUxE,GAAe,GACI,SAA1BU,EAAO2C,EAAW,KACrBsB,GAAW,GAGXH,EAAUxE,GAAe,GACI,SAA1BU,EAAO2C,EAAW,KACrBsB,GAAW,GAGVH,EAAUxE,GAAe,GAAOwE,IAAazE,EAAU,GAAKC,GACnB,SAAvCU,EAAO2C,EAAWrD,EAAa,KAClC2E,GAAW,GAGXH,IAAazE,EAAU,GAAKC,GACU,SAAnCU,EAAO2C,EAAWrD,KACrB2E,GAAW,GAGVH,IAAazE,EAAU,GAAKC,GAAiBwE,EAAUxE,GAAe,GAC7B,SAAvCU,EAAO2C,EAAWrD,EAAa,KAClC2E,GAAW,GAGfd,QAAQC,IAAcU,UAAAA,OAAAA,EAAeG,SAAAA,OAAAA,EAArC,qBACIC,IAAAA,EAAY/E,SAAS8C,cAAc,KAE/BgC,OADRF,EAAQ5B,YAAY+B,GACZD,GACD,KAAA,EACEH,EAAUxE,GAAgBwE,EAAUxE,GAAe,GACtD0B,EAAW+B,KAAKe,EAAUxE,EAAa,GAErCwE,EAAUxE,GACZ0B,EAAW+B,KAAKe,EAAUxE,GAEvBwE,EAAUxE,GAAgBwE,EAAUxE,GAAe,GACtD0B,EAAW+B,KAAKe,EAAUxE,EAAa,GAErCwE,EAAUxE,GAAe,GAC3B0B,EAAW+B,KAAKe,EAAU,GAExBA,EAAUxE,GAAe,GAC3B0B,EAAW+B,KAAKe,EAAU,GAEvBA,EAAUxE,GAAe,GAAOwE,IAAazE,EAAU,GAAKC,GAC/D0B,EAAW+B,KAAKe,EAAUxE,EAAa,GAErCwE,IAAazE,EAAU,GAAKC,GAC9B0B,EAAW+B,KAAKe,EAAUxE,GAEvBwE,IAAazE,EAAU,GAAKC,GAAiBwE,EAAUxE,GAAe,GACzE0B,EAAW+B,KAAKe,EAAUxE,EAAa,GAEzCyE,EAAQ1C,gBAAgB,SACxB0C,EAAQzC,aAAa,QAAQ,QAC7B,MACG,KAAA,EACHyC,EAAQ1C,gBAAgB,SACxB0C,EAAQzC,aAAa,QAAQ,OAC7B,MACG,KAAA,EACHyC,EAAQ1C,gBAAgB,SACxB0C,EAAQzC,aAAa,QAAQ,OAC7B,MACG,KAAA,EACHyC,EAAQ1C,gBAAgB,SACxB0C,EAAQzC,aAAa,QAAQ,SAC7B,MACG,KAAA,EACHyC,EAAQ1C,gBAAgB,SACxB0C,EAAQzC,aAAa,QAAQ,QAC7B,MACG,KAAA,EACHyC,EAAQ1C,gBAAgB,SACxB0C,EAAQzC,aAAa,QAAQ,QAC7B,MACG,KAAA,EACHyC,EAAQ1C,gBAAgB,SACxB0C,EAAQzC,aAAa,QAAQ,OAC7B,MACG,KAAA,EACHyC,EAAQ1C,gBAAgB,SACxB0C,EAAQzC,aAAa,QAAQ,SAC7B,MACG,KAAA,EACHyC,EAAQ1C,gBAAgB,SACxB0C,EAAQzC,aAAa,QAAQ,SAGjC4C,EAAUzE,UAAYwE,EAIjBjD,IAFPA,EAAWmD,QACXhB,QAAQC,IAAIpC,GACLA,EAAWuC,OAAS,GAAG,CAErBa,IADHA,IAAAA,EAAajF,SAASC,cAAoB4B,MAAAA,OAAAA,EAAW,KACP,GAA3CoD,EAAWC,UAAUC,SAAS,WACnCtD,EAAWmD,QACXC,EAAajF,SAASC,cAAoB4B,MAAAA,OAAAA,EAAW,KAEnDA,EAAWuC,OAAS,GACtBN,KAMN,SAASlC,EAAYW,GACnBA,EAAIC,iBACAd,EAAewD,UAAUC,SAAS,gBACpCzD,EAAeQ,gBAAgB,SAC/BR,EAAeS,aAAa,QAAQ,cAC3BT,EAAewD,UAAUC,SAAS,cAC3CzD,EAAeQ,gBAAgB,SAC/BR,EAAeS,aAAa,QAAQ,gBAEpC6B,QAAQC,IAAI,sBAKhB,SAASf,EAAaX,GACpBA,EAAIC,iBACAd,EAAewD,UAAUC,SAAS,eACpC5B,EAAMhB,GACGb,EAAewD,UAAUC,SAAS,aAC3CC,EAAY7C,GAEZyB,QAAQC,IAAI,sBAKhB,SAASmB,EAAY7C,GAEf/B,GADJ+B,EAAIC,iBACAhC,EAAiB,EAAG,CAClB6E,IAAAA,EAAe9C,EAAIkB,OACnB4B,GAAAA,EAAaH,UAAUC,SAAS,WAK9BzE,GAJJ2E,EAAanD,gBAAgB,SAC7BmD,EAAalD,aAAa,QAAS,eACnCzB,GAAiB,EACjBD,EAAUH,UAAeI,GAAAA,OAAAA,EAAmBE,OAAAA,OAAAA,GACxCF,IAAkBE,EAAY,CAE3B6B,IADLY,IACKZ,EAAI,EAAGA,EAAKvC,EAAUC,EAAasC,IAClCzC,SAASC,cAAoBwC,MAAAA,OAAAA,EAAI,IAAKyC,UAAUC,SAAS,YAC3DtD,EAAW+B,KAAKnB,EAAE,GAClBqB,KAGA9D,GAAmC,MAAnCA,SAASC,cAAc,UAGpBI,GAFL2D,QAAQC,IAAI,6BACZjE,SAASC,cAAc,eAAe+B,MAAMC,QAAU,QACxB,YAAzB5B,EAAWC,WAAsD,QAAzBD,EAAWC,WAAyBoC,SAAStC,EAAKE,UAAU,IAAMoC,SAASrC,EAAWC,UAAU,IACnIS,OAAAA,EAAaqB,OACd,IAAA,QACHC,aAAaiD,QAAQ,aAAclF,EAAKE,WACxCD,EAAWC,UAAY+B,aAAaC,QAAQ,cAC5C,MACG,IAAA,SACHD,aAAaiD,QAAQ,cAAelF,EAAKE,WACzCD,EAAWC,UAAY+B,aAAaC,QAAQ,eAC5C,MACG,IAAA,QACHD,aAAaiD,QAAQ,aAAclF,EAAKE,WACxCD,EAAWC,UAAY+B,aAAaC,QAAQ,oBAIzCtC,SAASC,cAAc,WAChC+D,QAAQC,IAAI,gEACZjE,SAASC,cAAc,gBAAgB+B,MAAMC,QAAU,eAGlDoD,EAAaH,UAAUC,SAAS,iBACzCE,EAAanD,gBAAgB,SAC7BmD,EAAalD,aAAa,QAAQ,UAClCzB,GAAiB,EACjBD,EAAUH,UAAeI,GAAAA,OAAAA,EAAmBE,OAAAA,OAAAA,KAMlD,SAASiE,EAAQU,GACXC,IAAAA,EACJC,WAAW,WACJhD,IAAAA,GAAK,EAAGA,EAAI,EAAGA,IAClB+C,EAAaxF,SAASC,cAAoBsF,MAAAA,OAAAA,EAAKpF,EAAWsC,IACtDE,KAAKC,OAAO2C,EAAKpF,EAAWsC,EAAE,GAAKtC,KAAgBwC,KAAKC,OAAO2C,EAAKpF,EAAW,GAAKA,IACtFqF,EAAWrD,aAAa,QAAS,aAGhCM,IAAAA,GAAK,EAAGA,EAAI,EAAGA,GAAI,EACtB+C,EAAaxF,SAASC,cAAoBsF,MAAAA,OAAAA,EAAK9C,IAC3CE,KAAKC,OAAO2C,EAAK9C,EAAE,GAAKtC,KAAgBwC,KAAKC,OAAO2C,EAAK,GAAKpF,IAChEqF,EAAWrD,aAAa,QAAS,aAGhCM,IAAAA,GAAK,EAAGA,EAAI,EAAGA,IAClB+C,EAAaxF,SAASC,cAAoBsF,MAAAA,OAAAA,EAAKpF,EAAWsC,IACtDE,KAAKC,OAAO2C,EAAKpF,EAAWsC,EAAE,GAAKtC,KAAgBwC,KAAKC,OAAO2C,EAAKpF,EAAW,GAAKA,IACtFqF,EAAWrD,aAAa,QAAS,cAGpC,KACHsD,WAAW,WACJhD,IAAAA,GAAK,EAAGA,EAAI,EAAGA,IAClB+C,EAAaxF,SAASC,cAAoBsF,MAAAA,OAAAA,EAAKpF,EAAWsC,IACtDE,KAAKC,OAAO2C,EAAKpF,EAAWsC,EAAE,GAAKtC,KAAgBwC,KAAKC,OAAO2C,EAAKpF,EAAW,GAAKA,IACtFqF,EAAWrD,aAAa,QAAS,UAGhCM,IAAAA,GAAK,EAAGA,EAAI,EAAGA,GAAI,EACtB+C,EAAaxF,SAASC,cAAoBsF,MAAAA,OAAAA,EAAK9C,IAC3CE,KAAKC,OAAO2C,EAAK9C,EAAE,GAAKtC,KAAgBwC,KAAKC,OAAO2C,EAAK,GAAKpF,IAChEqF,EAAWrD,aAAa,QAAS,UAGhCM,IAAAA,GAAK,EAAGA,EAAI,EAAGA,IAClB+C,EAAaxF,SAASC,cAAoBsF,MAAAA,OAAAA,EAAKpF,EAAWsC,IACtDE,KAAKC,OAAO2C,EAAKpF,EAAWsC,EAAE,GAAKtC,KAAgBwC,KAAKC,OAAO2C,EAAKpF,EAAW,GAAKA,IACtFqF,EAAWrD,aAAa,QAAS,WAGpC,KACHsD,WAAW,WACJhD,IAAAA,EAAI,EAAGA,GAAMtC,EAAaD,EAAUuC,IACvC+C,EAAaxF,SAASC,cAAoBwC,MAAAA,OAAAA,IACpB,SAAlB5B,EAAO4B,EAAI,KACb+C,EAAWtD,gBAAgB,SAC3BsD,EAAWrD,aAAa,QAAS,UAGpC,KACHnC,SAASC,cAAc,gBAAgB+B,MAAMC,QAAU,QAGzDhB","file":"main.d6e094ae.js","sourceRoot":"../src/pug","sourcesContent":["//Global Variables & starting values\nlet allRows = document.querySelector('.rows')\nlet numRows = 8;\nlet numColumns = 8;\nlet time = document.querySelector('#time')\nlet recordTime = document.querySelector('#record-time')\nrecordTime.innerHTML = 'not set';\nlet squaresCleared = 0;\nlet numMarked = document.querySelector('#marked')\nlet markersPlaced = NaN;\nlet allMarkers = NaN;\nlet firstSquare;\nlet values = [];\nlet finalValues = [];\nlet gridSelector = document.querySelector('#gridSelector')\ngridSelector.addEventListener('change',createBoard)\nlet presetRows = document.querySelector('#numRowsText')\npresetRows.innerHTML = numRows;\nlet customRows = document.querySelector('#numRowsInput')\nlet presetColumns = document.querySelector('#numColumnsText')\npresetColumns.innerHTML = numColumns;\nlet customColumns = document.querySelector('#numColumnsInput')\nlet customButton = document.querySelector('#createCustom')\nlet reset = document.querySelector('#reset')\nreset.addEventListener('click', resetBoard)\nlet indicatorArrow = document.querySelector('#indicatorArrow')\nlet clickActions = document.querySelector('#clickActions')\nclickActions.addEventListener('click',clickAction)\nlet currentTime;\nlet clearQueue = [];\n\n//Functions:\n//Setup gameboard\nfunction createBoard() {\n  while (allRows.firstChild) {\n    while (allRows.firstChild.firstChild) {\n      allRows.firstChild.removeChild(allRows.firstChild.firstChild)\n    }\n    allRows.removeChild(allRows.firstChild)\n  }\n  document.querySelector('#winMessage').style.display = \"none\"\n  document.querySelector('#lossMessage').style.display = \"none\"\n  values = [];\n  finalValues = [];\n  squaresCleared = 0;\n  indicatorArrow.removeAttribute('class')\n  indicatorArrow.setAttribute('class','clickReveal')\n  switch (gridSelector.value) {\n    case 'Small':\n      if (localStorage.getItem(\"smallScore\") !== null) {\n        recordTime.innerHTML = localStorage.getItem(\"smallScore\")\n      }\n      presetRows.style.display = 'inline';\n      presetRows.innerHTML = '8'\n      presetColumns.style.display = 'inline';\n      presetColumns.innerHTML = '8'\n      customRows.style.display = 'none';\n      customColumns.style.display = 'none';\n      customButton.style.display = 'none';\n      numRows = 8;\n      numColumns = 8;\n      break;\n    case 'Medium':\n      if (localStorage.getItem(\"medScore\") !== null) {\n        recordTime.innerHTML = localStorage.getItem(\"medScore\")\n      } else {recordTime.innerHTML = 'not set'}\n      presetRows.style.display = 'inline';\n      presetRows.innerHTML = '16'\n      presetColumns.style.display = 'inline';\n      presetColumns.innerHTML = '16';\n      customRows.style.display = 'none';\n      customColumns.style.display = 'none';\n      customButton.style.display = 'none';\n      numRows = 16;\n      numColumns = 16;\n      break;\n    case 'Large':\n      if (localStorage.getItem(\"largeScore\") !== null) {\n        recordTime.innerHTML = localStorage.getItem(\"largeScore\")\n      } else {\n        recordTime.innerHTML = \"not set\"\n      }\n      presetRows.style.display = 'inline';\n      presetRows.innerHTML = '24';\n      presetColumns.style.display = 'inline';\n      presetColumns.innerHTML = '24';\n      customRows.style.display = 'none';\n      customColumns.style.display = 'none';\n      customButton.style.display = 'none';\n      numRows = 24;\n      numColumns = 24;\n      break;\n    case 'Custom':\n    //To do: Custom sizing not working via customButton; only resetButton\n      recordTime.innerHTML = \"N/A\"\n      presetRows.style.display = 'none';\n      customRows.style.display = 'block';\n      presetColumns.style.display = 'none';\n      customColumns.style.display = 'block';\n      customButton.style.display = 'inline';\n      gridSelector.addEventListener('change', createBoard)\n      customButton.addEventListener('click', function(evt) {\n        evt.preventDefault()\n        numRows = customRows.value;\n        numColumns = customColumns.value;\n      })\n  }\n  time.innerHTML = parseInt(0,10)\n  allMarkers = Math.floor(numRows * numColumns * 0.2)\n  markersPlaced = 0;\n  numMarked.innerHTML = `${markersPlaced} / ${allMarkers}`\n  for (i = 0; i < numRows; i++) {\n    let newRow = document.createElement('div')\n    allRows.appendChild(newRow)\n    newRow.setAttribute('class', 'row')\n    newRow.setAttribute('id',`row-${i + 1}`)\n    for (j = 0; j < numColumns; j++) {\n      let newSquare = document.createElement('div')\n      newRow.appendChild(newSquare)\n      newSquare.setAttribute('class',`square`)\n      newSquare.setAttribute('id', `sq${(i * numColumns) + j + 1}`)\n      newSquare.addEventListener('click', clickHandler);\n\n    }\n  }\n}\n\n//Start/Stop timer\nfunction startTimer() {\n  time.innerHTML = 0\n  currentTime = setInterval(function() { time.innerHTML = parseInt(time.innerHTML, 10) + 1 }, 1000)\n}\nfunction stopTimer() {\n  clearInterval(currentTime)\n}\n\n//Reset with button\nfunction resetBoard(evt) {\n  evt.preventDefault();\n  stopTimer();\n  createBoard();\n}\n\n//Clear a square with left click\nfunction clear(evt) {\n  evt.preventDefault();\n  let clickVal = parseInt(evt.target.id.substr(2),10)\n  clearQueue.push(clickVal)\n  if (squaresCleared < 1) {\n    firstSquare = evt.target\n    placeMines()\n    checkNeighbors()\n    squaresCleared += 1;\n  } else {\n    squaresCleared += 1;\n    evt.target.removeAttribute('class')\n    evt.target.removeEventListener('click',clickAction)\n    checkNeighbors()\n  }\n}\n\n//On first square clicked, set mine locations\nfunction placeMines() {\n  console.log(firstSquare)\n  let firstSquareId = parseInt(firstSquare.getAttribute('id').substr(2),10)\n  for (i = 0; i < allMarkers; i++) {\n    values.push(\"mine\")\n  }\n  console.log(`The array has ${values.length} mines`)\n  for (i = 0; i < ((numColumns * numRows) - allMarkers - 1); i++) {\n    values.push(\"tbd\")\n  }\n  //shuffle the array\n  let currentIndex = values.length, temporaryValue, randomIndex;\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    temporaryValue = values[currentIndex];\n    values[currentIndex] = values[randomIndex];\n    values[randomIndex] = temporaryValue;\n  }\n  //push shuffled values to array and recombine, mixing in the first click\n  console.log(`The first square clicked was ${firstSquareId}`)\n  console.log(values.slice(0,(firstSquareId - 1)))\n  finalValues.push(values.slice(0,(firstSquareId - 1)))\n  console.log(finalValues[0].length)\n  finalValues.push([\"tbd\"])\n  finalValues.push(values.slice((firstSquareId - 1)))\n  values = finalValues[0].concat(finalValues[1],finalValues[2])\n  console.log(`The array has ${values.length} values`)\n  console.log(values)\n  startTimer()\n}\n\n//count the mines around any clicked square\nfunction checkNeighbors() {\n  let clickId = clearQueue[0]\n  let clickVal = clickId - 1\n  console.log(clickId)\n  let clicked = document.querySelector(`#sq${clickId}`)\n  clicked.removeEventListener('click', clickHandler)\n  if (values[clickVal] === 'mine') {\n    console.log('boom!')\n    stopTimer();\n    clicked.removeAttribute('class');\n    clicked.setAttribute('class','mine');\n    explode(clickId)\n  } else {\n    let counter = 0;\n    if ((clickId > numColumns) && (clickId % numColumns !== 1)) {\n      if ((values[clickVal - numColumns - 1]) === \"mine\") {\n        counter += 1;\n      }\n    }\n    if (clickId > numColumns) {\n      if ((values[clickVal - numColumns]) === \"mine\") {\n        counter += 1;\n      }\n    }\n    if ((clickId > numColumns) && (clickId % numColumns !== 0)) {\n      if ((values[clickVal - numColumns + 1]) === \"mine\") {\n        counter += 1;\n      }\n    }\n    if (clickId % numColumns !== 1) {\n      if ((values[clickVal - 1]) === \"mine\") {\n        counter += 1;\n      }\n    }\n    if (clickId % numColumns !== 0) {\n      if ((values[clickVal + 1]) === \"mine\") {\n        counter += 1;\n      }\n    }\n    if ((clickId % numColumns !== 1) && (clickId <= ((numRows - 1) * numColumns))) {\n      if ((values[clickVal + numColumns - 1]) === \"mine\") {\n        counter += 1;\n      }\n    }\n    if (clickId <= ((numRows - 1) * numColumns)) {\n      if ((values[clickVal + numColumns]) === \"mine\") {\n        counter += 1;\n      }\n    }\n    if ((clickId <= ((numRows - 1) * numColumns)) && (clickId % numColumns !== 0)) {\n      if ((values[clickVal + numColumns + 1]) === \"mine\") {\n        counter += 1;\n      }\n    }\n    console.log(`Square ${clickId} has ${counter} mines around it`)\n    let countText = document.createElement('P')\n    clicked.appendChild(countText)\n    switch (counter) {\n      case 0:\n        if ((clickId > numColumns) && (clickId % numColumns !== 1)) {\n          clearQueue.push(clickId - numColumns - 1)\n        }\n        if (clickId > numColumns) {\n          clearQueue.push(clickId - numColumns)\n        }\n        if ((clickId > numColumns) && (clickId % numColumns !== 0)) {\n          clearQueue.push(clickId - numColumns + 1)\n        }\n        if (clickId % numColumns !== 1) {\n          clearQueue.push(clickId - 1)\n        }\n        if (clickId % numColumns !== 0) {\n          clearQueue.push(clickId + 1)\n        }\n        if ((clickId % numColumns !== 1) && (clickId <= ((numRows - 1) * numColumns))) {\n          clearQueue.push(clickId + numColumns - 1)\n        }\n        if (clickId <= ((numRows - 1) * numColumns)) {\n          clearQueue.push(clickId + numColumns)\n        }\n        if ((clickId <= ((numRows - 1) * numColumns)) && (clickId % numColumns !== 0)) {\n          clearQueue.push(clickId + numColumns + 1)\n        }\n        clicked.removeAttribute('class');\n        clicked.setAttribute('class','zero');\n        break;\n      case 1:\n        clicked.removeAttribute('class');\n        clicked.setAttribute('class','one');\n        break;\n      case 2:\n        clicked.removeAttribute('class');\n        clicked.setAttribute('class','two');\n        break;\n      case 3:\n        clicked.removeAttribute('class');\n        clicked.setAttribute('class','three');\n        break;\n      case 4:\n        clicked.removeAttribute('class');\n        clicked.setAttribute('class','four');\n        break;\n      case 5:\n        clicked.removeAttribute('class');\n        clicked.setAttribute('class','five');\n        break;\n      case 6:\n        clicked.removeAttribute('class');\n        clicked.setAttribute('class','six');\n        break;\n      case 7:\n        clicked.removeAttribute('class');\n        clicked.setAttribute('class','seven');\n        break;\n      case 8:\n        clicked.removeAttribute('class');\n        clicked.setAttribute('class','eight');\n        break;\n    }\n    countText.innerHTML = counter;\n  }\n  clearQueue.shift()\n  console.log(clearQueue)\n  while (clearQueue.length > 0) {\n    let nextSquare = document.querySelector(`#sq${clearQueue[0]}`)\n    while (nextSquare.classList.contains('square') == false) {\n      clearQueue.shift();\n      nextSquare = document.querySelector(`#sq${clearQueue[0]}`)\n    }\n    if (clearQueue.length > 0) {\n      checkNeighbors();\n    }\n  }\n}\n\n//Click Action Toggle\nfunction clickAction(evt) {\n  evt.preventDefault()\n  if (indicatorArrow.classList.contains('clickReveal')) {\n    indicatorArrow.removeAttribute('class')\n    indicatorArrow.setAttribute('class','clickMark')\n  } else if (indicatorArrow.classList.contains('clickMark')) {\n    indicatorArrow.removeAttribute('class')\n    indicatorArrow.setAttribute('class','clickReveal')\n  } else {\n    console.log('something is wrong')\n  }\n}\n\n//Click handler function\nfunction clickHandler(evt) {\n  evt.preventDefault();\n  if (indicatorArrow.classList.contains('clickReveal')) {\n    clear(evt)\n  } else if (indicatorArrow.classList.contains('clickMark')) {\n    placeMarker(evt)\n  } else {\n    console.log('something is wrong')\n  }\n}\n\n//To do: place mine markers on right click\nfunction placeMarker(evt) {\n  evt.preventDefault()\n  if (squaresCleared > 0) {\n    let squareMarked = evt.target\n    if (squareMarked.classList.contains('square')) {\n      squareMarked.removeAttribute('class')\n      squareMarked.setAttribute('class', 'mine-marker')\n      markersPlaced += 1;\n      numMarked.innerHTML = `${markersPlaced} / ${allMarkers}`\n      if (markersPlaced === allMarkers) {\n        stopTimer()\n        for (i = 0; i < (numRows * numColumns); i++) {\n          if (document.querySelector(`#sq${i + 1}`).classList.contains('square')) {\n            clearQueue.push(i+1)\n            checkNeighbors()\n          }\n        }\n        if (document.querySelector('.mine') == null) {\n          console.log(\"Congratulations! You win!\")\n          document.querySelector('#winMessage').style.display = \"block\"\n          if ((recordTime.innerHTML === \"not set\") || (recordTime.innerHTML === \"N/A\") || (parseInt(time.innerHTML,10) < parseInt(recordTime.innerHTML,10))) {\n            switch (gridSelector.value) {\n              case 'Small':\n                localStorage.setItem(\"smallScore\", time.innerHTML)\n                recordTime.innerHTML = localStorage.getItem(\"smallScore\")\n                break;\n              case 'Medium':\n                localStorage.setItem(\"mediumScore\", time.innerHTML)\n                recordTime.innerHTML = localStorage.getItem(\"mediumScore\")\n                break;\n              case 'Large':\n                localStorage.setItem(\"largeScore\", time.innerHTML)\n                recordTime.innerHTML = localStorage.getItem(\"largeScore\")\n                break;\n            }\n          }\n        } else if (document.querySelector('.mine')) {\n          console.log(\"Sorry! You didn't find all the mines. Better luck next time!\")\n          document.querySelector('#lossMessage').style.display = \"block\"\n        }\n      }\n    } else if (squareMarked.classList.contains('mine-marker')) {\n      squareMarked.removeAttribute('class')\n      squareMarked.setAttribute('class','square')\n      markersPlaced -= 1\n      numMarked.innerHTML = `${markersPlaced} / ${allMarkers}`\n    }\n  }\n}\n\n//To do: explosion function\nfunction explode(bomb) {\n  let thisSquare;\n  setTimeout(function explode() {\n    for (i = -1; i < 2; i++) {\n      thisSquare = document.querySelector(`#sq${bomb-numColumns+i}`)\n      if (Math.floor((bomb-numColumns+i-1) / numColumns) === Math.floor((bomb-numColumns-1) / numColumns)) {\n        thisSquare.setAttribute('class', 'explosion')\n      }\n    }\n    for (i = -1; i < 2; i=i+2) {\n      thisSquare = document.querySelector(`#sq${bomb+i}`)\n      if (Math.floor((bomb+i-1) / numColumns) === Math.floor((bomb-1) / numColumns)) {\n        thisSquare.setAttribute('class', 'explosion')\n      }\n    }\n    for (i = -1; i < 2; i++) {\n      thisSquare = document.querySelector(`#sq${bomb+numColumns+i}`)\n      if (Math.floor((bomb+numColumns+i-1) / numColumns) === Math.floor((bomb+numColumns-1) / numColumns)) {\n        thisSquare.setAttribute('class', 'explosion')\n      }\n    }\n  }, 333)\n  setTimeout(function() {\n    for (i = -1; i < 2; i++) {\n      thisSquare = document.querySelector(`#sq${bomb-numColumns+i}`)\n      if (Math.floor((bomb-numColumns+i-1) / numColumns) === Math.floor((bomb-numColumns-1) / numColumns)) {\n        thisSquare.setAttribute('class', 'aflame')\n      }\n    }\n    for (i = -1; i < 2; i=i+2) {\n      thisSquare = document.querySelector(`#sq${bomb+i}`)\n      if (Math.floor((bomb+i-1) / numColumns) === Math.floor((bomb-1) / numColumns)) {\n        thisSquare.setAttribute('class', 'aflame')\n      }\n    }\n    for (i = -1; i < 2; i++) {\n      thisSquare = document.querySelector(`#sq${bomb+numColumns+i}`)\n      if (Math.floor((bomb+numColumns+i-1) / numColumns) === Math.floor((bomb+numColumns-1) / numColumns)) {\n        thisSquare.setAttribute('class', 'aflame')\n      }\n    }\n  }, 667)\n  setTimeout(function() {\n    for (i = 1; i <= (numColumns * numRows); i++) {\n      thisSquare = document.querySelector(`#sq${i}`)\n      if (values[i - 1] === 'mine') {\n        thisSquare.removeAttribute('class')\n        thisSquare.setAttribute('class', 'mine')\n      }\n    }\n  }, 1000)\n  document.querySelector('#lossMessage').style.display = \"block\"\n}\n//Initialize game on load\ncreateBoard();"]}